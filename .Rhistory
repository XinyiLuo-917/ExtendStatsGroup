setwd("C:\Users\xinyi Luo\Documents\GitHub\ExtendStatsGroup") ## comment out of submitted
setwd("C:/Users/xinyi Luo/Documents/GitHub/ExtendStatsGroup") ## comment out of submitted
a <- scan("4300-0.txt",what="character",skip=73,nlines=32858-73)
setwd("C:/Users/xinyi Luo/Documents/GitHub/ExtendStatsGroup") ## comment out of submitted
a <- scan("C:/Users/xinyi Luo/Desktop/4300-0.txt",what="character",skip=73,nlines=32858-73)
a <- gsub("_(","",a,fixed=TRUE) ## remove "_("
a
load("C:/Users/xinyi Luo/Documents/GitHub/ExtendStatsGroup/.RData")
split_punct <- function(word_vector, punctuation) {
# Find indices of words containing the punctuation mark
punct_indices <- grep(paste0("\\", punctuation), word_vector)
# Create a vector to store the modified word vector
modified_word_vector <- character(0)
# Iterate through each word in the input word vector
for (i in seq_along(word_vector)) {
word <- word_vector[i]
# Check if the current index is in the punct_indices
if (i %in% punct_indices) {
# Split the word into parts using the punctuation and remove empty parts
parts <- gsub(paste0("\\", punctuation), "", unlist(strsplit(word, paste0("\\", punctuation))))
# Add the parts to the modified word vector
modified_word_vector <- c(modified_word_vector, parts)
# Add the punctuation mark as a separate entry in the modified word vector
modified_word_vector <- c(modified_word_vector, rep(punctuation, length(parts)))
} else {
# If the word doesn't contain the punctuation mark, add it as is
modified_word_vector <- c(modified_word_vector, word)
}
}
return(modified_word_vector)
}
# Example usage:
word_vector <- c("Hello,", "world!", "How", "are", "you?")
punctuation <- ","
result <- split_punct(word_vector, punctuation)
print(result)
# Split the word into parts using the punctuation and remove empty parts
parts <- gsub(paste0("\\", punctuation), unlist(strsplit(word, paste0("\\", punctuation))))
punctuation <- ","
split_punct <- function(word_vector, punctuation) {
# Find indices of words containing the punctuation mark
punct_indices <- grep(paste0("\\", punctuation), word_vector)
# Create a vector to store the modified word vector
modified_word_vector <- character(0)
# Iterate through each word in the input word vector
for (i in seq_along(word_vector)) {
word <- word_vector[i]
# Check if the current index is in the punct_indices
if (i %in% punct_indices) {
# Split the word into parts using the punctuation and remove empty parts
parts <- gsub(paste0("\\", punctuation), "", unlist(strsplit(word, paste0("\\", punctuation))))
# Add the parts to the modified word vector
modified_word_vector <- c(modified_word_vector, parts)
# Add the punctuation mark as a separate entry in the modified word vector
modified_word_vector <- c(modified_word_vector, rep(punctuation, length(parts)))
} else {
# If the word doesn't contain the punctuation mark, add it as is
modified_word_vector <- c(modified_word_vector, word)
}
}
return(modified_word_vector)
}
# Example usage:
word_vector <- c("Hello,", "world!", "How", "are", "you?")
punctuation <- ","
result <- split_punct(word_vector, punctuation)
print(result)
split_punct <- function(word_vector, punctuation) {
# Find indices of words containing the punctuation mark
punct_indices <- grep(paste0("\\", punctuation), word_vector)
# Create a vector to store the modified word vector
modified_word_vector <- character(0)
# Iterate through each word in the input word vector
for (i in seq_along(word_vector)) {
word <- word_vector[i]
# Check if the current index is in the punct_indices
if (i %in% punct_indices) {
# Split the word into parts using the punctuation and remove empty parts
parts <- gsub(paste0("\\", punctuation), "\n", unlist(strsplit(word, paste0("\\", punctuation))))
# Add the parts to the modified word vector
modified_word_vector <- c(modified_word_vector, parts)
# Add the punctuation mark as a separate entry in the modified word vector
modified_word_vector <- c(modified_word_vector, rep(punctuation, length(parts)))
} else {
# If the word doesn't contain the punctuation mark, add it as is
modified_word_vector <- c(modified_word_vector, word)
}
}
return(modified_word_vector)
}
# Example usage:
word_vector <- c("Hello,", "world!", "How", "are", "you?")
punctuation <- ","
result <- split_punct(word_vector, punctuation)
print(result)
